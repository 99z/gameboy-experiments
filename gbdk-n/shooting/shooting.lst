                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (Mac OS X x86_64)
                              4 ;--------------------------------------------------------
                              5 	.module shooting
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _move_sprite
                             13 	.globl _set_sprite_tile
                             14 	.globl _set_sprite_data
                             15 	.globl _set_bkg_tiles
                             16 	.globl _set_bkg_data
                             17 	.globl _wait_vbl_done
                             18 	.globl _joypad
                             19 	.globl _initrand
                             20 	.globl _shooting
                             21 	.globl _bulletDir
                             22 	.globl _bulletLive
                             23 	.globl _bulletY
                             24 	.globl _bulletX
                             25 	.globl _randomBkgTiles
                             26 	.globl _lastKeys
                             27 	.globl _eY
                             28 	.globl _eX
                             29 	.globl _playerDir
                             30 	.globl _playerY
                             31 	.globl _playerX
                             32 	.globl _j
                             33 	.globl _i
                             34 	.globl _myBkgData
                             35 	.globl _sprites
                             36 	.globl _initGame
                             37 	.globl _updatePlayer
                             38 	.globl _collisionCheck
                             39 ;--------------------------------------------------------
                             40 ; ram data
                             41 ;--------------------------------------------------------
                             42 	.area _DATA
   0000                      43 _i::
   0000                      44 	.ds 1
   0001                      45 _j::
   0001                      46 	.ds 1
   0002                      47 _playerX::
   0002                      48 	.ds 1
   0003                      49 _playerY::
   0003                      50 	.ds 1
   0004                      51 _playerDir::
   0004                      52 	.ds 1
   0005                      53 _eX::
   0005                      54 	.ds 10
   000F                      55 _eY::
   000F                      56 	.ds 10
   0019                      57 _lastKeys::
   0019                      58 	.ds 1
   001A                      59 _randomBkgTiles::
   001A                      60 	.ds 20
   002E                      61 _bulletX::
   002E                      62 	.ds 1
   002F                      63 _bulletY::
   002F                      64 	.ds 1
   0030                      65 _bulletLive::
   0030                      66 	.ds 1
   0031                      67 _bulletDir::
   0031                      68 	.ds 1
   0032                      69 _shooting::
   0032                      70 	.ds 1
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area _DABS (ABS)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area _HOME
                             79 	.area _GSINIT
                             80 	.area _GSFINAL
                             81 	.area _GSINIT
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area _HOME
                             86 	.area _HOME
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area _CODE
                             91 ;shooting.c:24: void main() {
                             92 ;	---------------------------------
                             93 ; Function main
                             94 ; ---------------------------------
   0000                      95 _main::
                             96 ;shooting.c:26: initGame();
   0000 CDr6Fr01             97 	call	_initGame
                             98 ;shooting.c:28: while(1) {
   0003                      99 00102$:
                            100 ;shooting.c:29: updatePlayer(); // update player position
   0003 CDrA3r02            101 	call	_updatePlayer
                            102 ;shooting.c:30: HIDE_WIN; // Hide window layer - no windows used
   0006 11 40 FF            103 	ld	de,#0xff40
   0009 1A                  104 	ld	a,(de)
   000A 4F                  105 	ld	c,a
   000B 06 00               106 	ld	b,#0x00
   000D CB A9               107 	res	5, c
   000F 06 00               108 	ld	b,#0x00
   0011 21 40 FF            109 	ld	hl,#0xff40
   0014 71                  110 	ld	(hl),c
                            111 ;shooting.c:31: SHOW_SPRITES; // Show sprites layer
   0015 11 40 FF            112 	ld	de,#0xff40
   0018 1A                  113 	ld	a,(de)
   0019 4F                  114 	ld	c,a
   001A 06 00               115 	ld	b,#0x00
   001C 79                  116 	ld	a,c
   001D CB CF               117 	set	1, a
   001F 4F                  118 	ld	c,a
   0020 2E 40               119 	ld	l, #0x40
   0022 71                  120 	ld	(hl),c
                            121 ;shooting.c:32: SHOW_BKG; // Show background layer
   0023 11 40 FF            122 	ld	de,#0xff40
   0026 1A                  123 	ld	a,(de)
   0027 4F                  124 	ld	c,a
   0028 06 00               125 	ld	b,#0x00
   002A 79                  126 	ld	a,c
   002B CB C7               127 	set	0, a
   002D 4F                  128 	ld	c,a
   002E 2E 40               129 	ld	l, #0x40
   0030 71                  130 	ld	(hl),c
                            131 ;shooting.c:33: lastKeys = joypad(); // Update keypresses
   0031 CDr00r00            132 	call	_joypad
   0034 21r19r00            133 	ld	hl,#_lastKeys
   0037 73                  134 	ld	(hl),e
                            135 ;shooting.c:34: wait_vbl_done(); // Wait for vblank to finish - ensures a 60fps max
   0038 CDr00r00            136 	call	_wait_vbl_done
   003B C3r03r00            137 	jp	00102$
   003E C9                  138 	ret
   003F                     139 _sprites:
   003F FF                  140 	.db #0xff	; 255
   0040 FF                  141 	.db #0xff	; 255
   0041 81                  142 	.db #0x81	; 129
   0042 81                  143 	.db #0x81	; 129
   0043 A5                  144 	.db #0xa5	; 165
   0044 A5                  145 	.db #0xa5	; 165
   0045 A5                  146 	.db #0xa5	; 165
   0046 A5                  147 	.db #0xa5	; 165
   0047 81                  148 	.db #0x81	; 129
   0048 81                  149 	.db #0x81	; 129
   0049 99                  150 	.db #0x99	; 153
   004A 99                  151 	.db #0x99	; 153
   004B 81                  152 	.db #0x81	; 129
   004C 81                  153 	.db #0x81	; 129
   004D FF                  154 	.db #0xff	; 255
   004E FF                  155 	.db #0xff	; 255
   004F 3C                  156 	.db #0x3c	; 60
   0050 3C                  157 	.db #0x3c	; 60
   0051 42                  158 	.db #0x42	; 66	'B'
   0052 42                  159 	.db #0x42	; 66	'B'
   0053 81                  160 	.db #0x81	; 129
   0054 81                  161 	.db #0x81	; 129
   0055 ED                  162 	.db #0xed	; 237
   0056 ED                  163 	.db #0xed	; 237
   0057 81                  164 	.db #0x81	; 129
   0058 81                  165 	.db #0x81	; 129
   0059 91                  166 	.db #0x91	; 145
   005A 91                  167 	.db #0x91	; 145
   005B 42                  168 	.db #0x42	; 66	'B'
   005C 42                  169 	.db #0x42	; 66	'B'
   005D 3C                  170 	.db #0x3c	; 60
   005E 3C                  171 	.db #0x3c	; 60
   005F 99                  172 	.db #0x99	; 153
   0060 81                  173 	.db #0x81	; 129
   0061 42                  174 	.db #0x42	; 66	'B'
   0062 5A                  175 	.db #0x5a	; 90	'Z'
   0063 24                  176 	.db #0x24	; 36
   0064 3C                  177 	.db #0x3c	; 60
   0065 99                  178 	.db #0x99	; 153
   0066 7E                  179 	.db #0x7e	; 126
   0067 99                  180 	.db #0x99	; 153
   0068 7E                  181 	.db #0x7e	; 126
   0069 24                  182 	.db #0x24	; 36
   006A 3C                  183 	.db #0x3c	; 60
   006B 42                  184 	.db #0x42	; 66	'B'
   006C 5A                  185 	.db #0x5a	; 90	'Z'
   006D 99                  186 	.db #0x99	; 153
   006E 81                  187 	.db #0x81	; 129
   006F 38                  188 	.db #0x38	; 56	'8'
   0070 04                  189 	.db #0x04	; 4
   0071 7C                  190 	.db #0x7c	; 124
   0072 02                  191 	.db #0x02	; 2
   0073 5C                  192 	.db #0x5c	; 92
   0074 22                  193 	.db #0x22	; 34
   0075 5C                  194 	.db #0x5c	; 92
   0076 22                  195 	.db #0x22	; 34
   0077 5C                  196 	.db #0x5c	; 92
   0078 22                  197 	.db #0x22	; 34
   0079 5C                  198 	.db #0x5c	; 92
   007A 22                  199 	.db #0x22	; 34
   007B 7C                  200 	.db #0x7c	; 124
   007C 02                  201 	.db #0x02	; 2
   007D 38                  202 	.db #0x38	; 56	'8'
   007E 04                  203 	.db #0x04	; 4
   007F 00                  204 	.db #0x00	; 0
   0080 00                  205 	.db #0x00	; 0
   0081 3E                  206 	.db #0x3e	; 62
   0082 3E                  207 	.db #0x3e	; 62
   0083 63                  208 	.db #0x63	; 99	'c'
   0084 63                  209 	.db #0x63	; 99	'c'
   0085 63                  210 	.db #0x63	; 99	'c'
   0086 63                  211 	.db #0x63	; 99	'c'
   0087 63                  212 	.db #0x63	; 99	'c'
   0088 63                  213 	.db #0x63	; 99	'c'
   0089 63                  214 	.db #0x63	; 99	'c'
   008A 63                  215 	.db #0x63	; 99	'c'
   008B 3E                  216 	.db #0x3e	; 62
   008C 3E                  217 	.db #0x3e	; 62
   008D 00                  218 	.db #0x00	; 0
   008E 00                  219 	.db #0x00	; 0
   008F 00                  220 	.db #0x00	; 0
   0090 00                  221 	.db #0x00	; 0
   0091 1C                  222 	.db #0x1c	; 28
   0092 1C                  223 	.db #0x1c	; 28
   0093 3C                  224 	.db #0x3c	; 60
   0094 3C                  225 	.db #0x3c	; 60
   0095 6C                  226 	.db #0x6c	; 108	'l'
   0096 6C                  227 	.db #0x6c	; 108	'l'
   0097 0C                  228 	.db #0x0c	; 12
   0098 0C                  229 	.db #0x0c	; 12
   0099 0C                  230 	.db #0x0c	; 12
   009A 0C                  231 	.db #0x0c	; 12
   009B 7F                  232 	.db #0x7f	; 127
   009C 7F                  233 	.db #0x7f	; 127
   009D 00                  234 	.db #0x00	; 0
   009E 00                  235 	.db #0x00	; 0
   009F 00                  236 	.db #0x00	; 0
   00A0 00                  237 	.db #0x00	; 0
   00A1 3E                  238 	.db #0x3e	; 62
   00A2 3E                  239 	.db #0x3e	; 62
   00A3 63                  240 	.db #0x63	; 99	'c'
   00A4 63                  241 	.db #0x63	; 99	'c'
   00A5 03                  242 	.db #0x03	; 3
   00A6 03                  243 	.db #0x03	; 3
   00A7 1E                  244 	.db #0x1e	; 30
   00A8 1E                  245 	.db #0x1e	; 30
   00A9 70                  246 	.db #0x70	; 112	'p'
   00AA 70                  247 	.db #0x70	; 112	'p'
   00AB 7F                  248 	.db #0x7f	; 127
   00AC 7F                  249 	.db #0x7f	; 127
   00AD 00                  250 	.db #0x00	; 0
   00AE 00                  251 	.db #0x00	; 0
   00AF 00                  252 	.db #0x00	; 0
   00B0 00                  253 	.db #0x00	; 0
   00B1 7F                  254 	.db #0x7f	; 127
   00B2 7F                  255 	.db #0x7f	; 127
   00B3 03                  256 	.db #0x03	; 3
   00B4 03                  257 	.db #0x03	; 3
   00B5 3E                  258 	.db #0x3e	; 62
   00B6 3E                  259 	.db #0x3e	; 62
   00B7 07                  260 	.db #0x07	; 7
   00B8 07                  261 	.db #0x07	; 7
   00B9 43                  262 	.db #0x43	; 67	'C'
   00BA 43                  263 	.db #0x43	; 67	'C'
   00BB 3E                  264 	.db #0x3e	; 62
   00BC 3E                  265 	.db #0x3e	; 62
   00BD 00                  266 	.db #0x00	; 0
   00BE 00                  267 	.db #0x00	; 0
   00BF 00                  268 	.db #0x00	; 0
   00C0 00                  269 	.db #0x00	; 0
   00C1 60                  270 	.db #0x60	; 96
   00C2 60                  271 	.db #0x60	; 96
   00C3 6C                  272 	.db #0x6c	; 108	'l'
   00C4 6C                  273 	.db #0x6c	; 108	'l'
   00C5 6C                  274 	.db #0x6c	; 108	'l'
   00C6 6C                  275 	.db #0x6c	; 108	'l'
   00C7 7F                  276 	.db #0x7f	; 127
   00C8 7F                  277 	.db #0x7f	; 127
   00C9 0C                  278 	.db #0x0c	; 12
   00CA 0C                  279 	.db #0x0c	; 12
   00CB 0C                  280 	.db #0x0c	; 12
   00CC 0C                  281 	.db #0x0c	; 12
   00CD 00                  282 	.db #0x00	; 0
   00CE 00                  283 	.db #0x00	; 0
   00CF 00                  284 	.db #0x00	; 0
   00D0 00                  285 	.db #0x00	; 0
   00D1 7F                  286 	.db #0x7f	; 127
   00D2 7F                  287 	.db #0x7f	; 127
   00D3 60                  288 	.db #0x60	; 96
   00D4 60                  289 	.db #0x60	; 96
   00D5 7E                  290 	.db #0x7e	; 126
   00D6 7E                  291 	.db #0x7e	; 126
   00D7 03                  292 	.db #0x03	; 3
   00D8 03                  293 	.db #0x03	; 3
   00D9 63                  294 	.db #0x63	; 99	'c'
   00DA 63                  295 	.db #0x63	; 99	'c'
   00DB 3E                  296 	.db #0x3e	; 62
   00DC 3E                  297 	.db #0x3e	; 62
   00DD 00                  298 	.db #0x00	; 0
   00DE 00                  299 	.db #0x00	; 0
   00DF 00                  300 	.db #0x00	; 0
   00E0 00                  301 	.db #0x00	; 0
   00E1 3F                  302 	.db #0x3f	; 63
   00E2 3F                  303 	.db #0x3f	; 63
   00E3 60                  304 	.db #0x60	; 96
   00E4 60                  305 	.db #0x60	; 96
   00E5 7E                  306 	.db #0x7e	; 126
   00E6 7E                  307 	.db #0x7e	; 126
   00E7 63                  308 	.db #0x63	; 99	'c'
   00E8 63                  309 	.db #0x63	; 99	'c'
   00E9 63                  310 	.db #0x63	; 99	'c'
   00EA 63                  311 	.db #0x63	; 99	'c'
   00EB 3E                  312 	.db #0x3e	; 62
   00EC 3E                  313 	.db #0x3e	; 62
   00ED 00                  314 	.db #0x00	; 0
   00EE 00                  315 	.db #0x00	; 0
   00EF 00                  316 	.db #0x00	; 0
   00F0 00                  317 	.db #0x00	; 0
   00F1 7F                  318 	.db #0x7f	; 127
   00F2 7F                  319 	.db #0x7f	; 127
   00F3 03                  320 	.db #0x03	; 3
   00F4 03                  321 	.db #0x03	; 3
   00F5 06                  322 	.db #0x06	; 6
   00F6 06                  323 	.db #0x06	; 6
   00F7 0C                  324 	.db #0x0c	; 12
   00F8 0C                  325 	.db #0x0c	; 12
   00F9 18                  326 	.db #0x18	; 24
   00FA 18                  327 	.db #0x18	; 24
   00FB 30                  328 	.db #0x30	; 48	'0'
   00FC 30                  329 	.db #0x30	; 48	'0'
   00FD 00                  330 	.db #0x00	; 0
   00FE 00                  331 	.db #0x00	; 0
   00FF 00                  332 	.db #0x00	; 0
   0100 00                  333 	.db #0x00	; 0
   0101 3E                  334 	.db #0x3e	; 62
   0102 3E                  335 	.db #0x3e	; 62
   0103 63                  336 	.db #0x63	; 99	'c'
   0104 63                  337 	.db #0x63	; 99	'c'
   0105 63                  338 	.db #0x63	; 99	'c'
   0106 63                  339 	.db #0x63	; 99	'c'
   0107 3E                  340 	.db #0x3e	; 62
   0108 3E                  341 	.db #0x3e	; 62
   0109 63                  342 	.db #0x63	; 99	'c'
   010A 63                  343 	.db #0x63	; 99	'c'
   010B 3E                  344 	.db #0x3e	; 62
   010C 3E                  345 	.db #0x3e	; 62
   010D 00                  346 	.db #0x00	; 0
   010E 00                  347 	.db #0x00	; 0
   010F 00                  348 	.db #0x00	; 0
   0110 00                  349 	.db #0x00	; 0
   0111 3E                  350 	.db #0x3e	; 62
   0112 3E                  351 	.db #0x3e	; 62
   0113 63                  352 	.db #0x63	; 99	'c'
   0114 63                  353 	.db #0x63	; 99	'c'
   0115 63                  354 	.db #0x63	; 99	'c'
   0116 63                  355 	.db #0x63	; 99	'c'
   0117 3F                  356 	.db #0x3f	; 63
   0118 3F                  357 	.db #0x3f	; 63
   0119 03                  358 	.db #0x03	; 3
   011A 03                  359 	.db #0x03	; 3
   011B 7E                  360 	.db #0x7e	; 126
   011C 7E                  361 	.db #0x7e	; 126
   011D 00                  362 	.db #0x00	; 0
   011E 00                  363 	.db #0x00	; 0
   011F                     364 _myBkgData:
   011F 00                  365 	.db #0x00	; 0
   0120 00                  366 	.db #0x00	; 0
   0121 00                  367 	.db #0x00	; 0
   0122 00                  368 	.db #0x00	; 0
   0123 00                  369 	.db #0x00	; 0
   0124 00                  370 	.db #0x00	; 0
   0125 00                  371 	.db #0x00	; 0
   0126 00                  372 	.db #0x00	; 0
   0127 00                  373 	.db #0x00	; 0
   0128 00                  374 	.db #0x00	; 0
   0129 00                  375 	.db #0x00	; 0
   012A 00                  376 	.db #0x00	; 0
   012B 00                  377 	.db #0x00	; 0
   012C 00                  378 	.db #0x00	; 0
   012D 00                  379 	.db #0x00	; 0
   012E 00                  380 	.db #0x00	; 0
   012F 00                  381 	.db #0x00	; 0
   0130 00                  382 	.db #0x00	; 0
   0131 08                  383 	.db #0x08	; 8
   0132 00                  384 	.db #0x00	; 0
   0133 08                  385 	.db #0x08	; 8
   0134 00                  386 	.db #0x00	; 0
   0135 36                  387 	.db #0x36	; 54	'6'
   0136 00                  388 	.db #0x00	; 0
   0137 08                  389 	.db #0x08	; 8
   0138 00                  390 	.db #0x00	; 0
   0139 08                  391 	.db #0x08	; 8
   013A 00                  392 	.db #0x00	; 0
   013B 00                  393 	.db #0x00	; 0
   013C 00                  394 	.db #0x00	; 0
   013D 00                  395 	.db #0x00	; 0
   013E 00                  396 	.db #0x00	; 0
   013F 00                  397 	.db #0x00	; 0
   0140 00                  398 	.db #0x00	; 0
   0141 00                  399 	.db #0x00	; 0
   0142 00                  400 	.db #0x00	; 0
   0143 20                  401 	.db #0x20	; 32
   0144 00                  402 	.db #0x00	; 0
   0145 50                  403 	.db #0x50	; 80	'P'
   0146 00                  404 	.db #0x00	; 0
   0147 20                  405 	.db #0x20	; 32
   0148 00                  406 	.db #0x00	; 0
   0149 00                  407 	.db #0x00	; 0
   014A 00                  408 	.db #0x00	; 0
   014B 00                  409 	.db #0x00	; 0
   014C 00                  410 	.db #0x00	; 0
   014D 00                  411 	.db #0x00	; 0
   014E 00                  412 	.db #0x00	; 0
   014F 00                  413 	.db #0x00	; 0
   0150 00                  414 	.db #0x00	; 0
   0151 00                  415 	.db #0x00	; 0
   0152 00                  416 	.db #0x00	; 0
   0153 00                  417 	.db #0x00	; 0
   0154 00                  418 	.db #0x00	; 0
   0155 00                  419 	.db #0x00	; 0
   0156 00                  420 	.db #0x00	; 0
   0157 00                  421 	.db #0x00	; 0
   0158 00                  422 	.db #0x00	; 0
   0159 04                  423 	.db #0x04	; 4
   015A 00                  424 	.db #0x00	; 0
   015B 0E                  425 	.db #0x0e	; 14
   015C 00                  426 	.db #0x00	; 0
   015D 04                  427 	.db #0x04	; 4
   015E 00                  428 	.db #0x00	; 0
   015F 00                  429 	.db #0x00	; 0
   0160 00                  430 	.db #0x00	; 0
   0161 00                  431 	.db #0x00	; 0
   0162 00                  432 	.db #0x00	; 0
   0163 00                  433 	.db #0x00	; 0
   0164 00                  434 	.db #0x00	; 0
   0165 00                  435 	.db #0x00	; 0
   0166 00                  436 	.db #0x00	; 0
   0167 50                  437 	.db #0x50	; 80	'P'
   0168 00                  438 	.db #0x00	; 0
   0169 20                  439 	.db #0x20	; 32
   016A 00                  440 	.db #0x00	; 0
   016B 50                  441 	.db #0x50	; 80	'P'
   016C 00                  442 	.db #0x00	; 0
   016D 00                  443 	.db #0x00	; 0
   016E 00                  444 	.db #0x00	; 0
                            445 ;shooting.c:38: void initGame(){
                            446 ;	---------------------------------
                            447 ; Function initGame
                            448 ; ---------------------------------
   016F                     449 _initGame::
   016F 3B                  450 	dec	sp
                            451 ;shooting.c:39: DISPLAY_ON; // turns on gameboy lcd
   0170 11 40 FF            452 	ld	de,#0xff40
   0173 1A                  453 	ld	a,(de)
   0174 4F                  454 	ld	c,a
   0175 06 00               455 	ld	b,#0x00
   0177 79                  456 	ld	a,c
   0178 CB FF               457 	set	7, a
   017A 4F                  458 	ld	c,a
   017B 21 40 FF            459 	ld	hl,#0xff40
   017E 71                  460 	ld	(hl),c
                            461 ;shooting.c:40: NR52_REG = 0x8F; // sound on
   017F 2E 26               462 	ld	l, #0x26
   0181 36 8F               463 	ld	(hl),#0x8f
                            464 ;shooting.c:41: NR51_REG = 0x11; // both sound channels
   0183 2E 25               465 	ld	l, #0x25
   0185 36 11               466 	ld	(hl),#0x11
                            467 ;shooting.c:42: NR50_REG = 0x77; // volume level, max = 0x77, min = 0x00
   0187 2E 24               468 	ld	l, #0x24
   0189 36 77               469 	ld	(hl),#0x77
                            470 ;shooting.c:44: initrand(DIV_REG); // part of gb/rand.h, want to use DIV_REG as per the documentation
   018B 11 04 FF            471 	ld	de,#0xff04
   018E 1A                  472 	ld	a,(de)
   018F 4F                  473 	ld	c,a
   0190 06 00               474 	ld	b,#0x00
   0192 C5                  475 	push	bc
   0193 CDr00r00            476 	call	_initrand
   0196 E8 02               477 	add	sp, #2
                            478 ;shooting.c:45: set_sprite_data(0, 14, sprites); // storing sprite data
   0198 21r3Fr00            479 	ld	hl,#_sprites
   019B E5                  480 	push	hl
   019C 21 00 0E            481 	ld	hl,#0x0e00
   019F E5                  482 	push	hl
   01A0 CDr00r00            483 	call	_set_sprite_data
   01A3 E8 04               484 	add	sp, #4
                            485 ;shooting.c:46: set_bkg_data(0, 4, myBkgData); // storing background data - window layer shares this
   01A5 21r1Fr01            486 	ld	hl,#_myBkgData
   01A8 E5                  487 	push	hl
   01A9 21 00 04            488 	ld	hl,#0x0400
   01AC E5                  489 	push	hl
   01AD CDr00r00            490 	call	_set_bkg_data
   01B0 E8 04               491 	add	sp, #4
                            492 ;shooting.c:48: playerX = 64; // initial x position for player
   01B2 21r02r00            493 	ld	hl,#_playerX
   01B5 36 40               494 	ld	(hl),#0x40
                            495 ;shooting.c:49: playerY = 64; // initial y position for player
   01B7 21r03r00            496 	ld	hl,#_playerY
   01BA 36 40               497 	ld	(hl),#0x40
                            498 ;shooting.c:51: set_sprite_tile(0,0); // sprite tile representing the player - is first sprite, so 0th index
   01BC 21 00 00            499 	ld	hl,#0x0000
   01BF E5                  500 	push	hl
   01C0 CDr00r00            501 	call	_set_sprite_tile
   01C3 E8 02               502 	add	sp, #2
                            503 ;shooting.c:54: for (i=0; i !=10; i++) {
   01C5 21r00r00            504 	ld	hl,#_i
   01C8 36 00               505 	ld	(hl),#0x00
   01CA                     506 00104$:
                            507 ;shooting.c:55: eX[i] = 16+(rand()); // random x position between 16 and 144
   01CA 3Er05               508 	ld	a,#<(_eX)
   01CC 21r00r00            509 	ld	hl,#_i
   01CF 86                  510 	add	a, (hl)
   01D0 4F                  511 	ld	c,a
   01D1 3Es00               512 	ld	a,#>(_eX)
   01D3 CE 00               513 	adc	a, #0x00
   01D5 47                  514 	ld	b,a
   01D6 C5                  515 	push	bc
   01D7 CDr00r00            516 	call	_rand
   01DA C1                  517 	pop	bc
   01DB 7B                  518 	ld	a,e
   01DC C6 10               519 	add	a, #0x10
   01DE 02                  520 	ld	(bc),a
                            521 ;shooting.c:56: eY[i] = 16+(rand()); // random y position between 16 and 144
   01DF 3Er0F               522 	ld	a,#<(_eY)
   01E1 21r00r00            523 	ld	hl,#_i
   01E4 86                  524 	add	a, (hl)
   01E5 4F                  525 	ld	c,a
   01E6 3Es00               526 	ld	a,#>(_eY)
   01E8 CE 00               527 	adc	a, #0x00
   01EA 47                  528 	ld	b,a
   01EB C5                  529 	push	bc
   01EC CDr00r00            530 	call	_rand
   01EF C1                  531 	pop	bc
   01F0 7B                  532 	ld	a,e
   01F1 C6 10               533 	add	a, #0x10
   01F3 02                  534 	ld	(bc),a
                            535 ;shooting.c:57: set_sprite_tile(i+1, 2); // enemy sprite tile set to 2
   01F4 21r00r00            536 	ld	hl,#_i
   01F7 46                  537 	ld	b,(hl)
   01F8 04                  538 	inc	b
   01F9 3E 02               539 	ld	a,#0x02
   01FB F5                  540 	push	af
   01FC 33                  541 	inc	sp
   01FD C5                  542 	push	bc
   01FE 33                  543 	inc	sp
   01FF CDr00r00            544 	call	_set_sprite_tile
   0202 E8 02               545 	add	sp, #2
                            546 ;shooting.c:58: move_sprite(i+1,eX[i], eY[i]); // place enemies
   0204 3Er0F               547 	ld	a,#<(_eY)
   0206 21r00r00            548 	ld	hl,#_i
   0209 86                  549 	add	a, (hl)
   020A 4F                  550 	ld	c,a
   020B 3Es00               551 	ld	a,#>(_eY)
   020D CE 00               552 	adc	a, #0x00
   020F 47                  553 	ld	b,a
   0210 0A                  554 	ld	a,(bc)
   0211 F8 00               555 	ldhl	sp,#0
   0213 77                  556 	ld	(hl),a
   0214 3Er05               557 	ld	a,#<(_eX)
   0216 21r00r00            558 	ld	hl,#_i
   0219 86                  559 	add	a, (hl)
   021A 4F                  560 	ld	c,a
   021B 3Es00               561 	ld	a,#>(_eX)
   021D CE 00               562 	adc	a, #0x00
   021F 47                  563 	ld	b,a
   0220 0A                  564 	ld	a,(bc)
   0221 57                  565 	ld	d,a
   0222 46                  566 	ld	b,(hl)
   0223 04                  567 	inc	b
   0224 F8 00               568 	ldhl	sp,#0
   0226 7E                  569 	ld	a,(hl)
   0227 F5                  570 	push	af
   0228 33                  571 	inc	sp
   0229 D5                  572 	push	de
   022A 33                  573 	inc	sp
   022B C5                  574 	push	bc
   022C 33                  575 	inc	sp
   022D CDr00r00            576 	call	_move_sprite
   0230 E8 03               577 	add	sp, #3
                            578 ;shooting.c:54: for (i=0; i !=10; i++) {
   0232 21r00r00            579 	ld	hl,#_i
   0235 34                  580 	inc	(hl)
   0236 7E                  581 	ld	a,(hl)
   0237 D6 0A               582 	sub	a, #0x0a
   0239 C2rCAr01            583 	jp	NZ,00104$
                            584 ;shooting.c:61: bulletLive = 0;
   023C 21r30r00            585 	ld	hl,#_bulletLive
   023F 36 00               586 	ld	(hl),#0x00
                            587 ;shooting.c:62: shooting = 0;
   0241 21r32r00            588 	ld	hl,#_shooting
   0244 36 00               589 	ld	(hl),#0x00
                            590 ;shooting.c:63: set_sprite_tile(12, 3); // sets sprite tile 03 to index 12
   0246 21 0C 03            591 	ld	hl,#0x030c
   0249 E5                  592 	push	hl
   024A CDr00r00            593 	call	_set_sprite_tile
   024D E8 02               594 	add	sp, #2
                            595 ;shooting.c:66: for (j=0; j != 18; j++) {
   024F 21r01r00            596 	ld	hl,#_j
   0252 36 00               597 	ld	(hl),#0x00
   0254                     598 00108$:
                            599 ;shooting.c:67: for (i=0; i != 20; i++) {
   0254 21r00r00            600 	ld	hl,#_i
   0257 36 00               601 	ld	(hl),#0x00
   0259                     602 00106$:
                            603 ;shooting.c:68: randomBkgTiles[i] = rand() % 4;
   0259 3Er1A               604 	ld	a,#<(_randomBkgTiles)
   025B 21r00r00            605 	ld	hl,#_i
   025E 86                  606 	add	a, (hl)
   025F 4F                  607 	ld	c,a
   0260 3Es00               608 	ld	a,#>(_randomBkgTiles)
   0262 CE 00               609 	adc	a, #0x00
   0264 47                  610 	ld	b,a
   0265 C5                  611 	push	bc
   0266 CDr00r00            612 	call	_rand
   0269 C1                  613 	pop	bc
   026A C5                  614 	push	bc
   026B 21 04 00            615 	ld	hl,#0x0004
   026E E5                  616 	push	hl
   026F D5                  617 	push	de
   0270 CDr00r00            618 	call	__modsint
   0273 E8 04               619 	add	sp, #4
   0275 C1                  620 	pop	bc
   0276 7B                  621 	ld	a,e
   0277 02                  622 	ld	(bc),a
                            623 ;shooting.c:67: for (i=0; i != 20; i++) {
   0278 21r00r00            624 	ld	hl,#_i
   027B 34                  625 	inc	(hl)
   027C 7E                  626 	ld	a,(hl)
   027D D6 14               627 	sub	a, #0x14
   027F 20 D8               628 	jr	NZ,00106$
                            629 ;shooting.c:70: set_bkg_tiles(0,j,20,1,randomBkgTiles); // x, y, width, height, background tiles
   0281 21r1Ar00            630 	ld	hl,#_randomBkgTiles
   0284 E5                  631 	push	hl
   0285 21 14 01            632 	ld	hl,#0x0114
   0288 E5                  633 	push	hl
   0289 21r01r00            634 	ld	hl,#_j
   028C 7E                  635 	ld	a,(hl)
   028D F5                  636 	push	af
   028E 33                  637 	inc	sp
   028F AF                  638 	xor	a, a
   0290 F5                  639 	push	af
   0291 33                  640 	inc	sp
   0292 CDr00r00            641 	call	_set_bkg_tiles
   0295 E8 06               642 	add	sp, #6
                            643 ;shooting.c:66: for (j=0; j != 18; j++) {
   0297 21r01r00            644 	ld	hl,#_j
   029A 34                  645 	inc	(hl)
   029B 7E                  646 	ld	a,(hl)
   029C D6 12               647 	sub	a, #0x12
   029E C2r54r02            648 	jp	NZ,00108$
   02A1 33                  649 	inc	sp
   02A2 C9                  650 	ret
                            651 ;shooting.c:75: void updatePlayer(){
                            652 ;	---------------------------------
                            653 ; Function updatePlayer
                            654 ; ---------------------------------
   02A3                     655 _updatePlayer::
   02A3 E8 FE               656 	add	sp, #-2
                            657 ;shooting.c:79: if (joypad() & J_UP) {
   02A5 CDr00r00            658 	call	_joypad
   02A8 0E 00               659 	ld	c,#0x00
   02AA CB 53               660 	bit	2, e
   02AC CAr22r03            661 	jp	Z,00112$
                            662 ;shooting.c:80: playerY--;
   02AF 21r03r00            663 	ld	hl,#_playerY
   02B2 35                  664 	dec	(hl)
                            665 ;shooting.c:82: shooting = 1;
   02B3 21r32r00            666 	ld	hl,#_shooting
   02B6 36 01               667 	ld	(hl),#0x01
                            668 ;shooting.c:83: playerDir = 0;
   02B8 21r04r00            669 	ld	hl,#_playerDir
   02BB 36 00               670 	ld	(hl),#0x00
                            671 ;shooting.c:85: if (bulletLive == 0) {
   02BD 21r30r00            672 	ld	hl,#_bulletLive
   02C0 7E                  673 	ld	a,(hl)
   02C1 B7                  674 	or	a, a
   02C2 C2r15r03            675 	jp	NZ,00108$
                            676 ;shooting.c:86: bulletLive = 1;
   02C5 36 01               677 	ld	(hl),#0x01
                            678 ;shooting.c:88: if (joypad() & J_LEFT) {
   02C7 CDr00r00            679 	call	_joypad
   02CA 0E 00               680 	ld	c,#0x00
   02CC CB 4B               681 	bit	1, e
   02CE 28 07               682 	jr	Z,00105$
                            683 ;shooting.c:89: bulletDir = 4;
   02D0 21r31r00            684 	ld	hl,#_bulletDir
   02D3 36 04               685 	ld	(hl),#0x04
   02D5 18 15               686 	jr	00106$
   02D7                     687 00105$:
                            688 ;shooting.c:90: } else if (joypad() & J_RIGHT) {
   02D7 CDr00r00            689 	call	_joypad
   02DA 0E 00               690 	ld	c,#0x00
   02DC CB 43               691 	bit	0, e
   02DE 28 07               692 	jr	Z,00102$
                            693 ;shooting.c:91: bulletDir = 5;
   02E0 21r31r00            694 	ld	hl,#_bulletDir
   02E3 36 05               695 	ld	(hl),#0x05
   02E5 18 05               696 	jr	00106$
   02E7                     697 00102$:
                            698 ;shooting.c:93: bulletDir = 0;
   02E7 21r31r00            699 	ld	hl,#_bulletDir
   02EA 36 00               700 	ld	(hl),#0x00
   02EC                     701 00106$:
                            702 ;shooting.c:96: bulletX = playerX;
   02EC E5                  703 	push	hl
   02ED 21r02r00            704 	ld	hl,#_playerX
   02F0 7E                  705 	ld	a,(hl)
   02F1 21r2Er00            706 	ld	hl,#_bulletX
   02F4 77                  707 	ld	(hl),a
   02F5 E1                  708 	pop	hl
                            709 ;shooting.c:97: bulletY = playerY;
   02F6 E5                  710 	push	hl
   02F7 21r03r00            711 	ld	hl,#_playerY
   02FA 7E                  712 	ld	a,(hl)
   02FB 21r2Fr00            713 	ld	hl,#_bulletY
   02FE 77                  714 	ld	(hl),a
   02FF E1                  715 	pop	hl
                            716 ;shooting.c:98: move_sprite(12, bulletX, bulletY); // places sprite on screen
   0300 21r2Fr00            717 	ld	hl,#_bulletY
   0303 7E                  718 	ld	a,(hl)
   0304 F5                  719 	push	af
   0305 33                  720 	inc	sp
   0306 21r2Er00            721 	ld	hl,#_bulletX
   0309 7E                  722 	ld	a,(hl)
   030A F5                  723 	push	af
   030B 33                  724 	inc	sp
   030C 3E 0C               725 	ld	a,#0x0c
   030E F5                  726 	push	af
   030F 33                  727 	inc	sp
   0310 CDr00r00            728 	call	_move_sprite
   0313 E8 03               729 	add	sp, #3
   0315                     730 00108$:
                            731 ;shooting.c:100: if (playerY == 15) {
   0315 21r03r00            732 	ld	hl,#_playerY
   0318 7E                  733 	ld	a,(hl)
   0319 D6 0F               734 	sub	a, #0x0f
   031B 20 05               735 	jr	NZ,00112$
                            736 ;shooting.c:101: playerY = 16;
   031D 21r03r00            737 	ld	hl,#_playerY
   0320 36 10               738 	ld	(hl),#0x10
   0322                     739 00112$:
                            740 ;shooting.c:105: if (joypad() & J_DOWN){
   0322 CDr00r00            741 	call	_joypad
   0325 0E 00               742 	ld	c,#0x00
   0327 CB 5B               743 	bit	3, e
   0329 CAr9Fr03            744 	jp	Z,00124$
                            745 ;shooting.c:106: playerY++;
   032C 21r03r00            746 	ld	hl,#_playerY
   032F 34                  747 	inc	(hl)
                            748 ;shooting.c:108: shooting = 1;
   0330 21r32r00            749 	ld	hl,#_shooting
   0333 36 01               750 	ld	(hl),#0x01
                            751 ;shooting.c:109: playerDir = 2;
   0335 21r04r00            752 	ld	hl,#_playerDir
   0338 36 02               753 	ld	(hl),#0x02
                            754 ;shooting.c:111: if (bulletLive == 0) {
   033A 21r30r00            755 	ld	hl,#_bulletLive
   033D 7E                  756 	ld	a,(hl)
   033E B7                  757 	or	a, a
   033F C2r92r03            758 	jp	NZ,00120$
                            759 ;shooting.c:112: bulletLive = 1;
   0342 36 01               760 	ld	(hl),#0x01
                            761 ;shooting.c:114: if (joypad() & J_LEFT) {
   0344 CDr00r00            762 	call	_joypad
   0347 0E 00               763 	ld	c,#0x00
   0349 CB 4B               764 	bit	1, e
   034B 28 07               765 	jr	Z,00117$
                            766 ;shooting.c:115: bulletDir = 7;
   034D 21r31r00            767 	ld	hl,#_bulletDir
   0350 36 07               768 	ld	(hl),#0x07
   0352 18 15               769 	jr	00118$
   0354                     770 00117$:
                            771 ;shooting.c:116: } else if (joypad() & J_RIGHT) {
   0354 CDr00r00            772 	call	_joypad
   0357 0E 00               773 	ld	c,#0x00
   0359 CB 43               774 	bit	0, e
   035B 28 07               775 	jr	Z,00114$
                            776 ;shooting.c:117: bulletDir = 6;
   035D 21r31r00            777 	ld	hl,#_bulletDir
   0360 36 06               778 	ld	(hl),#0x06
   0362 18 05               779 	jr	00118$
   0364                     780 00114$:
                            781 ;shooting.c:119: bulletDir = 2;
   0364 21r31r00            782 	ld	hl,#_bulletDir
   0367 36 02               783 	ld	(hl),#0x02
   0369                     784 00118$:
                            785 ;shooting.c:122: bulletX = playerX;
   0369 E5                  786 	push	hl
   036A 21r02r00            787 	ld	hl,#_playerX
   036D 7E                  788 	ld	a,(hl)
   036E 21r2Er00            789 	ld	hl,#_bulletX
   0371 77                  790 	ld	(hl),a
   0372 E1                  791 	pop	hl
                            792 ;shooting.c:123: bulletY = playerY;
   0373 E5                  793 	push	hl
   0374 21r03r00            794 	ld	hl,#_playerY
   0377 7E                  795 	ld	a,(hl)
   0378 21r2Fr00            796 	ld	hl,#_bulletY
   037B 77                  797 	ld	(hl),a
   037C E1                  798 	pop	hl
                            799 ;shooting.c:124: move_sprite(12, bulletX, bulletY); // places sprite on screen
   037D 21r2Fr00            800 	ld	hl,#_bulletY
   0380 7E                  801 	ld	a,(hl)
   0381 F5                  802 	push	af
   0382 33                  803 	inc	sp
   0383 21r2Er00            804 	ld	hl,#_bulletX
   0386 7E                  805 	ld	a,(hl)
   0387 F5                  806 	push	af
   0388 33                  807 	inc	sp
   0389 3E 0C               808 	ld	a,#0x0c
   038B F5                  809 	push	af
   038C 33                  810 	inc	sp
   038D CDr00r00            811 	call	_move_sprite
   0390 E8 03               812 	add	sp, #3
   0392                     813 00120$:
                            814 ;shooting.c:126: if (playerY == 153){
   0392 21r03r00            815 	ld	hl,#_playerY
   0395 7E                  816 	ld	a,(hl)
   0396 D6 99               817 	sub	a, #0x99
   0398 20 05               818 	jr	NZ,00124$
                            819 ;shooting.c:127: playerY = 152;
   039A 21r03r00            820 	ld	hl,#_playerY
   039D 36 98               821 	ld	(hl),#0x98
   039F                     822 00124$:
                            823 ;shooting.c:131: if (joypad() & J_LEFT){
   039F CDr00r00            824 	call	_joypad
   03A2 0E 00               825 	ld	c,#0x00
   03A4 CB 4B               826 	bit	1, e
   03A6 CArFBr03            827 	jp	Z,00130$
                            828 ;shooting.c:132: playerX--;
   03A9 21r02r00            829 	ld	hl,#_playerX
   03AC 35                  830 	dec	(hl)
                            831 ;shooting.c:134: shooting = 1;
   03AD 21r32r00            832 	ld	hl,#_shooting
   03B0 36 01               833 	ld	(hl),#0x01
                            834 ;shooting.c:135: playerDir = 3;
   03B2 21r04r00            835 	ld	hl,#_playerDir
   03B5 36 03               836 	ld	(hl),#0x03
                            837 ;shooting.c:137: if (bulletLive == 0) {
   03B7 21r30r00            838 	ld	hl,#_bulletLive
   03BA 7E                  839 	ld	a,(hl)
   03BB B7                  840 	or	a, a
   03BC 20 30               841 	jr	NZ,00126$
                            842 ;shooting.c:138: bulletLive = 1;
   03BE 36 01               843 	ld	(hl),#0x01
                            844 ;shooting.c:139: bulletDir = 3;
   03C0 21r31r00            845 	ld	hl,#_bulletDir
   03C3 36 03               846 	ld	(hl),#0x03
                            847 ;shooting.c:140: bulletX = playerX;
   03C5 E5                  848 	push	hl
   03C6 21r02r00            849 	ld	hl,#_playerX
   03C9 7E                  850 	ld	a,(hl)
   03CA 21r2Er00            851 	ld	hl,#_bulletX
   03CD 77                  852 	ld	(hl),a
   03CE E1                  853 	pop	hl
                            854 ;shooting.c:141: bulletY = playerY;
   03CF E5                  855 	push	hl
   03D0 21r03r00            856 	ld	hl,#_playerY
   03D3 7E                  857 	ld	a,(hl)
   03D4 21r2Fr00            858 	ld	hl,#_bulletY
   03D7 77                  859 	ld	(hl),a
   03D8 E1                  860 	pop	hl
                            861 ;shooting.c:142: move_sprite(12, bulletX, bulletY); // places sprite on screen
   03D9 21r2Fr00            862 	ld	hl,#_bulletY
   03DC 7E                  863 	ld	a,(hl)
   03DD F5                  864 	push	af
   03DE 33                  865 	inc	sp
   03DF 21r2Er00            866 	ld	hl,#_bulletX
   03E2 7E                  867 	ld	a,(hl)
   03E3 F5                  868 	push	af
   03E4 33                  869 	inc	sp
   03E5 3E 0C               870 	ld	a,#0x0c
   03E7 F5                  871 	push	af
   03E8 33                  872 	inc	sp
   03E9 CDr00r00            873 	call	_move_sprite
   03EC E8 03               874 	add	sp, #3
   03EE                     875 00126$:
                            876 ;shooting.c:144: if (playerX == 7){
   03EE 21r02r00            877 	ld	hl,#_playerX
   03F1 7E                  878 	ld	a,(hl)
   03F2 D6 07               879 	sub	a, #0x07
   03F4 20 05               880 	jr	NZ,00130$
                            881 ;shooting.c:145: playerX = 8;
   03F6 21r02r00            882 	ld	hl,#_playerX
   03F9 36 08               883 	ld	(hl),#0x08
   03FB                     884 00130$:
                            885 ;shooting.c:149: if (joypad() & J_RIGHT){
   03FB CDr00r00            886 	call	_joypad
   03FE 0E 00               887 	ld	c,#0x00
   0400 CB 43               888 	bit	0, e
   0402 CAr57r04            889 	jp	Z,00136$
                            890 ;shooting.c:150: playerX++;
   0405 21r02r00            891 	ld	hl,#_playerX
   0408 34                  892 	inc	(hl)
                            893 ;shooting.c:152: shooting = 1;
   0409 21r32r00            894 	ld	hl,#_shooting
   040C 36 01               895 	ld	(hl),#0x01
                            896 ;shooting.c:153: playerDir = 1;
   040E 21r04r00            897 	ld	hl,#_playerDir
   0411 36 01               898 	ld	(hl),#0x01
                            899 ;shooting.c:155: if (bulletLive == 0) {
   0413 21r30r00            900 	ld	hl,#_bulletLive
   0416 7E                  901 	ld	a,(hl)
   0417 B7                  902 	or	a, a
   0418 20 30               903 	jr	NZ,00132$
                            904 ;shooting.c:156: bulletLive = 1;
   041A 36 01               905 	ld	(hl),#0x01
                            906 ;shooting.c:157: bulletDir = 1;
   041C 21r31r00            907 	ld	hl,#_bulletDir
   041F 36 01               908 	ld	(hl),#0x01
                            909 ;shooting.c:158: bulletX = playerX;
   0421 E5                  910 	push	hl
   0422 21r02r00            911 	ld	hl,#_playerX
   0425 7E                  912 	ld	a,(hl)
   0426 21r2Er00            913 	ld	hl,#_bulletX
   0429 77                  914 	ld	(hl),a
   042A E1                  915 	pop	hl
                            916 ;shooting.c:159: bulletY = playerY;
   042B E5                  917 	push	hl
   042C 21r03r00            918 	ld	hl,#_playerY
   042F 7E                  919 	ld	a,(hl)
   0430 21r2Fr00            920 	ld	hl,#_bulletY
   0433 77                  921 	ld	(hl),a
   0434 E1                  922 	pop	hl
                            923 ;shooting.c:160: move_sprite(12, bulletX, bulletY); // places sprite on screen
   0435 21r2Fr00            924 	ld	hl,#_bulletY
   0438 7E                  925 	ld	a,(hl)
   0439 F5                  926 	push	af
   043A 33                  927 	inc	sp
   043B 21r2Er00            928 	ld	hl,#_bulletX
   043E 7E                  929 	ld	a,(hl)
   043F F5                  930 	push	af
   0440 33                  931 	inc	sp
   0441 3E 0C               932 	ld	a,#0x0c
   0443 F5                  933 	push	af
   0444 33                  934 	inc	sp
   0445 CDr00r00            935 	call	_move_sprite
   0448 E8 03               936 	add	sp, #3
   044A                     937 00132$:
                            938 ;shooting.c:162: if (playerX == 161){
   044A 21r02r00            939 	ld	hl,#_playerX
   044D 7E                  940 	ld	a,(hl)
   044E D6 A1               941 	sub	a, #0xa1
   0450 20 05               942 	jr	NZ,00136$
                            943 ;shooting.c:163: playerX = 160;
   0452 21r02r00            944 	ld	hl,#_playerX
   0455 36 A0               945 	ld	(hl),#0xa0
   0457                     946 00136$:
                            947 ;shooting.c:168: if (joypad() & J_A) {
   0457 CDr00r00            948 	call	_joypad
   045A 0E 00               949 	ld	c,#0x00
   045C CB 63               950 	bit	4, e
   045E 28 1F               951 	jr	Z,00141$
                            952 ;shooting.c:169: NR11_REG = 0x7f; // audio channel #1, wave pattern duty
   0460 21 11 FF            953 	ld	hl,#0xff11
   0463 36 7F               954 	ld	(hl),#0x7f
                            955 ;shooting.c:170: NR12_REG = 0x7f; // volume for 11
   0465 2E 12               956 	ld	l, #0x12
   0467 36 7F               957 	ld	(hl),#0x7f
                            958 ;shooting.c:171: NR13_REG = DIV_REG; // sound frequency least significant bit
   0469 11 04 FF            959 	ld	de,#0xff04
   046C 1A                  960 	ld	a,(de)
   046D 11 13 FF            961 	ld	de,#0xff13
   0470 12                  962 	ld	(de),a
                            963 ;shooting.c:172: NR14_REG = 0x80 + (DIV_REG % 8); // sound frequency significant 3 bits
   0471 11 04 FF            964 	ld	de,#0xff04
   0474 1A                  965 	ld	a,(de)
   0475 E6 07               966 	and	a, #0x07
   0477 C6 80               967 	add	a, #0x80
   0479 11 14 FF            968 	ld	de,#0xff14
   047C 12                  969 	ld	(de),a
   047D 18 1F               970 	jr	00142$
   047F                     971 00141$:
                            972 ;shooting.c:173: } else if (joypad() & J_B) {
   047F CDr00r00            973 	call	_joypad
   0482 0E 00               974 	ld	c,#0x00
   0484 CB 6B               975 	bit	5, e
   0486 20 16               976 	jr	NZ,00142$
                            977 ;shooting.c:177: NR11_REG = 0x00;
   0488 21 11 FF            978 	ld	hl,#0xff11
   048B 36 00               979 	ld	(hl),#0x00
                            980 ;shooting.c:178: NR12_REG = 0x00;
   048D 2E 12               981 	ld	l, #0x12
   048F 36 00               982 	ld	(hl),#0x00
                            983 ;shooting.c:179: NR13_REG = 0x00;
   0491 2E 13               984 	ld	l, #0x13
   0493 36 00               985 	ld	(hl),#0x00
                            986 ;shooting.c:180: NR14_REG = 0x00;
   0495 2E 14               987 	ld	l, #0x14
   0497 36 00               988 	ld	(hl),#0x00
                            989 ;shooting.c:182: shooting = 0;
   0499 21r32r00            990 	ld	hl,#_shooting
   049C 36 00               991 	ld	(hl),#0x00
   049E                     992 00142$:
                            993 ;shooting.c:185: move_sprite(0,playerX,playerY); // position player sprite on screen
   049E 21r03r00            994 	ld	hl,#_playerY
   04A1 7E                  995 	ld	a,(hl)
   04A2 F5                  996 	push	af
   04A3 33                  997 	inc	sp
   04A4 21r02r00            998 	ld	hl,#_playerX
   04A7 7E                  999 	ld	a,(hl)
   04A8 F5                 1000 	push	af
   04A9 33                 1001 	inc	sp
   04AA AF                 1002 	xor	a, a
   04AB F5                 1003 	push	af
   04AC 33                 1004 	inc	sp
   04AD CDr00r00           1005 	call	_move_sprite
   04B0 E8 03              1006 	add	sp, #3
                           1007 ;shooting.c:187: if (bulletX > 160 || bulletX == 0 || bulletY > 152 || bulletY == 0) {
   04B2 3E A0              1008 	ld	a,#0xa0
   04B4 21r2Er00           1009 	ld	hl,#_bulletX
   04B7 96                 1010 	sub	a, (hl)
   04B8 38 11              1011 	jr	C,00160$
   04BA 7E                 1012 	ld	a,(hl)
   04BB B7                 1013 	or	a, a
   04BC 28 0D              1014 	jr	Z,00160$
   04BE 3E 98              1015 	ld	a,#0x98
   04C0 21r2Fr00           1016 	ld	hl,#_bulletY
   04C3 96                 1017 	sub	a, (hl)
   04C4 38 05              1018 	jr	C,00160$
   04C6 7E                 1019 	ld	a,(hl)
   04C7 B7                 1020 	or	a, a
   04C8 C2r4Fr05           1021 	jp	NZ,00161$
   04CB                    1022 00160$:
                           1023 ;shooting.c:188: if (shooting == 1) {
   04CB 21r32r00           1024 	ld	hl,#_shooting
   04CE 7E                 1025 	ld	a,(hl)
   04CF 3D                 1026 	dec	a
   04D0 C2r3Dr05           1027 	jp	NZ,00149$
                           1028 ;shooting.c:189: bulletLive = 1;
   04D3 21r30r00           1029 	ld	hl,#_bulletLive
   04D6 36 01              1030 	ld	(hl),#0x01
                           1031 ;shooting.c:190: switch (playerDir) {
   04D8 3E 03              1032 	ld	a,#0x03
   04DA 21r04r00           1033 	ld	hl,#_playerDir
   04DD 96                 1034 	sub	a, (hl)
   04DE DArFBr05           1035 	jp	C,00162$
                           1036 ;shooting.c:96: bulletX = playerX;
   04E1 21r02r00           1037 	ld	hl,#_playerX
   04E4 46                 1038 	ld	b,(hl)
                           1039 ;shooting.c:97: bulletY = playerY;
   04E5 21r03r00           1040 	ld	hl,#_playerY
   04E8 4E                 1041 	ld	c,(hl)
                           1042 ;shooting.c:193: bulletY = playerY - 8;
   04E9 7E                 1043 	ld	a,(hl)
   04EA C6 F8              1044 	add	a,#0xf8
   04EC F8 00              1045 	ldhl	sp,#0
   04EE 77                 1046 	ld	(hl),a
                           1047 ;shooting.c:195: bulletX = playerX + 8;
   04EF 21r02r00           1048 	ld	hl,#_playerX
   04F2 7E                 1049 	ld	a,(hl)
   04F3 C6 08              1050 	add	a, #0x08
   04F5 5F                 1051 	ld	e,a
                           1052 ;shooting.c:190: switch (playerDir) {
   04F6 21r04r00           1053 	ld	hl,#_playerDir
   04F9 5E                 1054 	ld	e,(hl)
   04FA 16 00              1055 	ld	d,#0x00
   04FC 21r02r05           1056 	ld	hl,#00309$
   04FF 19                 1057 	add	hl,de
   0500 19                 1058 	add	hl,de
                           1059 ;shooting.c:191: case 0:
   0501 E9                 1060 	jp	(hl)
   0502                    1061 00309$:
   0502 18 06              1062 	jr	00143$
   0504 18 11              1063 	jr	00144$
   0506 18 1A              1064 	jr	00145$
   0508 18 28              1065 	jr	00146$
   050A                    1066 00143$:
                           1067 ;shooting.c:192: bulletX = playerX;
   050A 21r2Er00           1068 	ld	hl,#_bulletX
   050D 70                 1069 	ld	(hl),b
                           1070 ;shooting.c:193: bulletY = playerY - 8;
   050E E5                 1071 	push	hl
   050F F8 02              1072 	ldhl	sp,#2
   0511 7E                 1073 	ld	a,(hl)
   0512 21r2Fr00           1074 	ld	hl,#_bulletY
   0515 77                 1075 	ld	(hl),a
   0516 E1                 1076 	pop	hl
                           1077 ;shooting.c:194: case 1:
   0517                    1078 00144$:
                           1079 ;shooting.c:195: bulletX = playerX + 8;
   0517 21r2Er00           1080 	ld	hl,#_bulletX
   051A 73                 1081 	ld	(hl),e
                           1082 ;shooting.c:196: bulletY = playerY;
   051B 21r2Fr00           1083 	ld	hl,#_bulletY
   051E 71                 1084 	ld	(hl),c
                           1085 ;shooting.c:197: break;
   051F C3rFBr05           1086 	jp	00162$
                           1087 ;shooting.c:198: case 2:
   0522                    1088 00145$:
                           1089 ;shooting.c:199: bulletX = playerX;
   0522 21r2Er00           1090 	ld	hl,#_bulletX
   0525 70                 1091 	ld	(hl),b
                           1092 ;shooting.c:200: bulletY = playerY - 8;
   0526 E5                 1093 	push	hl
   0527 F8 02              1094 	ldhl	sp,#2
   0529 7E                 1095 	ld	a,(hl)
   052A 21r2Fr00           1096 	ld	hl,#_bulletY
   052D 77                 1097 	ld	(hl),a
   052E E1                 1098 	pop	hl
                           1099 ;shooting.c:201: break;
   052F C3rFBr05           1100 	jp	00162$
                           1101 ;shooting.c:202: case 3:
   0532                    1102 00146$:
                           1103 ;shooting.c:203: bulletX = playerX + 8;
   0532 21r2Er00           1104 	ld	hl,#_bulletX
   0535 73                 1105 	ld	(hl),e
                           1106 ;shooting.c:204: bulletY = playerY;
   0536 21r2Fr00           1107 	ld	hl,#_bulletY
   0539 71                 1108 	ld	(hl),c
                           1109 ;shooting.c:206: }
   053A C3rFBr05           1110 	jp	00162$
   053D                    1111 00149$:
                           1112 ;shooting.c:208: bulletLive = 0;
   053D 21r30r00           1113 	ld	hl,#_bulletLive
   0540 36 00              1114 	ld	(hl),#0x00
                           1115 ;shooting.c:209: bulletX = 0;
   0542 21r2Er00           1116 	ld	hl,#_bulletX
   0545 36 00              1117 	ld	(hl),#0x00
                           1118 ;shooting.c:210: bulletY = 0;
   0547 21r2Fr00           1119 	ld	hl,#_bulletY
   054A 36 00              1120 	ld	(hl),#0x00
   054C C3rFBr05           1121 	jp	00162$
   054F                    1122 00161$:
                           1123 ;shooting.c:213: switch (bulletDir) {
   054F 3E 07              1124 	ld	a,#0x07
   0551 21r31r00           1125 	ld	hl,#_bulletDir
   0554 96                 1126 	sub	a, (hl)
   0555 DArFBr05           1127 	jp	C,00162$
                           1128 ;shooting.c:215: bulletY = bulletY - 2;
   0558 21r2Fr00           1129 	ld	hl,#_bulletY
   055B 46                 1130 	ld	b,(hl)
   055C 05                 1131 	dec	b
   055D 05                 1132 	dec	b
                           1133 ;shooting.c:218: bulletX = bulletX + 2;
   055E 21r2Er00           1134 	ld	hl,#_bulletX
   0561 4E                 1135 	ld	c,(hl)
   0562 0C                 1136 	inc	c
   0563 0C                 1137 	inc	c
                           1138 ;shooting.c:221: bulletY = bulletY + 2;
   0564 21r2Fr00           1139 	ld	hl,#_bulletY
   0567 7E                 1140 	ld	a,(hl)
   0568 C6 02              1141 	add	a, #0x02
   056A F8 00              1142 	ldhl	sp,#0
   056C 77                 1143 	ld	(hl),a
                           1144 ;shooting.c:224: bulletX = bulletX - 2;
   056D 21r2Er00           1145 	ld	hl,#_bulletX
   0570 7E                 1146 	ld	a,(hl)
   0571 C6 FE              1147 	add	a,#0xfe
   0573 F8 01              1148 	ldhl	sp,#1
   0575 77                 1149 	ld	(hl),a
                           1150 ;shooting.c:213: switch (bulletDir) {
   0576 21r31r00           1151 	ld	hl,#_bulletDir
   0579 5E                 1152 	ld	e,(hl)
   057A 16 00              1153 	ld	d,#0x00
   057C 21r83r05           1154 	ld	hl,#00310$
   057F 19                 1155 	add	hl,de
   0580 19                 1156 	add	hl,de
   0581 19                 1157 	add	hl,de
   0582 E9                 1158 	jp	(hl)
   0583                    1159 00310$:
   0583 C3r9Br05           1160 	jp	00151$
   0586 C3rA2r05           1161 	jp	00152$
   0589 C3rA9r05           1162 	jp	00153$
   058C C3rB5r05           1163 	jp	00154$
   058F C3rC1r05           1164 	jp	00155$
   0592 C3rD0r05           1165 	jp	00156$
   0595 C3rDAr05           1166 	jp	00157$
   0598 C3rE9r05           1167 	jp	00158$
                           1168 ;shooting.c:214: case 0:
   059B                    1169 00151$:
                           1170 ;shooting.c:215: bulletY = bulletY - 2;
   059B 21r2Fr00           1171 	ld	hl,#_bulletY
   059E 70                 1172 	ld	(hl),b
                           1173 ;shooting.c:216: break;
   059F C3rFBr05           1174 	jp	00162$
                           1175 ;shooting.c:217: case 1:
   05A2                    1176 00152$:
                           1177 ;shooting.c:218: bulletX = bulletX + 2;
   05A2 21r2Er00           1178 	ld	hl,#_bulletX
   05A5 71                 1179 	ld	(hl),c
                           1180 ;shooting.c:219: break;
   05A6 C3rFBr05           1181 	jp	00162$
                           1182 ;shooting.c:220: case 2:
   05A9                    1183 00153$:
                           1184 ;shooting.c:221: bulletY = bulletY + 2;
   05A9 E5                 1185 	push	hl
   05AA F8 02              1186 	ldhl	sp,#2
   05AC 7E                 1187 	ld	a,(hl)
   05AD 21r2Fr00           1188 	ld	hl,#_bulletY
   05B0 77                 1189 	ld	(hl),a
   05B1 E1                 1190 	pop	hl
                           1191 ;shooting.c:222: break;
   05B2 C3rFBr05           1192 	jp	00162$
                           1193 ;shooting.c:223: case 3:
   05B5                    1194 00154$:
                           1195 ;shooting.c:224: bulletX = bulletX - 2;
   05B5 E5                 1196 	push	hl
   05B6 F8 03              1197 	ldhl	sp,#3
   05B8 7E                 1198 	ld	a,(hl)
   05B9 21r2Er00           1199 	ld	hl,#_bulletX
   05BC 77                 1200 	ld	(hl),a
   05BD E1                 1201 	pop	hl
                           1202 ;shooting.c:225: break;
   05BE C3rFBr05           1203 	jp	00162$
                           1204 ;shooting.c:226: case 4:
   05C1                    1205 00155$:
                           1206 ;shooting.c:227: bulletX = bulletX - 2;
   05C1 E5                 1207 	push	hl
   05C2 F8 03              1208 	ldhl	sp,#3
   05C4 7E                 1209 	ld	a,(hl)
   05C5 21r2Er00           1210 	ld	hl,#_bulletX
   05C8 77                 1211 	ld	(hl),a
   05C9 E1                 1212 	pop	hl
                           1213 ;shooting.c:228: bulletY = bulletY - 2;
   05CA 21r2Fr00           1214 	ld	hl,#_bulletY
   05CD 70                 1215 	ld	(hl),b
                           1216 ;shooting.c:229: break;
   05CE 18 2B              1217 	jr	00162$
                           1218 ;shooting.c:230: case 5:
   05D0                    1219 00156$:
                           1220 ;shooting.c:231: bulletX = bulletX + 2;
   05D0 21r2Er00           1221 	ld	hl,#_bulletX
   05D3 71                 1222 	ld	(hl),c
                           1223 ;shooting.c:232: bulletY = bulletY - 2;
   05D4 21r2Fr00           1224 	ld	hl,#_bulletY
   05D7 70                 1225 	ld	(hl),b
                           1226 ;shooting.c:233: break;
   05D8 18 21              1227 	jr	00162$
                           1228 ;shooting.c:234: case 6:
   05DA                    1229 00157$:
                           1230 ;shooting.c:235: bulletX = bulletX + 2;
   05DA 21r2Er00           1231 	ld	hl,#_bulletX
   05DD 71                 1232 	ld	(hl),c
                           1233 ;shooting.c:236: bulletY = bulletY + 2;
   05DE E5                 1234 	push	hl
   05DF F8 02              1235 	ldhl	sp,#2
   05E1 7E                 1236 	ld	a,(hl)
   05E2 21r2Fr00           1237 	ld	hl,#_bulletY
   05E5 77                 1238 	ld	(hl),a
   05E6 E1                 1239 	pop	hl
                           1240 ;shooting.c:237: break;
   05E7 18 12              1241 	jr	00162$
                           1242 ;shooting.c:238: case 7:
   05E9                    1243 00158$:
                           1244 ;shooting.c:239: bulletX = bulletX - 2;
   05E9 E5                 1245 	push	hl
   05EA F8 03              1246 	ldhl	sp,#3
   05EC 7E                 1247 	ld	a,(hl)
   05ED 21r2Er00           1248 	ld	hl,#_bulletX
   05F0 77                 1249 	ld	(hl),a
   05F1 E1                 1250 	pop	hl
                           1251 ;shooting.c:240: bulletY = bulletY + 2;
   05F2 E5                 1252 	push	hl
   05F3 F8 02              1253 	ldhl	sp,#2
   05F5 7E                 1254 	ld	a,(hl)
   05F6 21r2Fr00           1255 	ld	hl,#_bulletY
   05F9 77                 1256 	ld	(hl),a
   05FA E1                 1257 	pop	hl
                           1258 ;shooting.c:242: }
   05FB                    1259 00162$:
                           1260 ;shooting.c:245: move_sprite(12, bulletX, bulletY);
   05FB 21r2Fr00           1261 	ld	hl,#_bulletY
   05FE 7E                 1262 	ld	a,(hl)
   05FF F5                 1263 	push	af
   0600 33                 1264 	inc	sp
   0601 21r2Er00           1265 	ld	hl,#_bulletX
   0604 7E                 1266 	ld	a,(hl)
   0605 F5                 1267 	push	af
   0606 33                 1268 	inc	sp
   0607 3E 0C              1269 	ld	a,#0x0c
   0609 F5                 1270 	push	af
   060A 33                 1271 	inc	sp
   060B CDr00r00           1272 	call	_move_sprite
   060E E8 03              1273 	add	sp, #3
                           1274 ;shooting.c:247: j = 0; // re use j for collision - saves space
   0610 21r01r00           1275 	ld	hl,#_j
   0613 36 00              1276 	ld	(hl),#0x00
                           1277 ;shooting.c:249: for (i=0; i != 10; i++) {
   0615 21r00r00           1278 	ld	hl,#_i
   0618 36 00              1279 	ld	(hl),#0x00
   061A                    1280 00172$:
                           1281 ;shooting.c:250: if (collisionCheck(playerX, playerY, 8, 8, eX[i], eY[i], 8, 8) == 1){
   061A 3Er0F              1282 	ld	a,#<(_eY)
   061C 21r00r00           1283 	ld	hl,#_i
   061F 86                 1284 	add	a, (hl)
   0620 4F                 1285 	ld	c,a
   0621 3Es00              1286 	ld	a,#>(_eY)
   0623 CE 00              1287 	adc	a, #0x00
   0625 47                 1288 	ld	b,a
   0626 0A                 1289 	ld	a,(bc)
   0627 F8 01              1290 	ldhl	sp,#1
   0629 77                 1291 	ld	(hl),a
   062A 3Er05              1292 	ld	a,#<(_eX)
   062C 21r00r00           1293 	ld	hl,#_i
   062F 86                 1294 	add	a, (hl)
   0630 4F                 1295 	ld	c,a
   0631 3Es00              1296 	ld	a,#>(_eX)
   0633 CE 00              1297 	adc	a, #0x00
   0635 47                 1298 	ld	b,a
   0636 0A                 1299 	ld	a,(bc)
   0637 47                 1300 	ld	b,a
   0638 21 08 08           1301 	ld	hl,#0x0808
   063B E5                 1302 	push	hl
   063C F8 03              1303 	ldhl	sp,#3
   063E 7E                 1304 	ld	a,(hl)
   063F F5                 1305 	push	af
   0640 33                 1306 	inc	sp
   0641 C5                 1307 	push	bc
   0642 33                 1308 	inc	sp
   0643 21 08 08           1309 	ld	hl,#0x0808
   0646 E5                 1310 	push	hl
   0647 21r03r00           1311 	ld	hl,#_playerY
   064A 7E                 1312 	ld	a,(hl)
   064B F5                 1313 	push	af
   064C 33                 1314 	inc	sp
   064D 21r02r00           1315 	ld	hl,#_playerX
   0650 7E                 1316 	ld	a,(hl)
   0651 F5                 1317 	push	af
   0652 33                 1318 	inc	sp
   0653 CDr88r06           1319 	call	_collisionCheck
   0656 E8 08              1320 	add	sp, #8
   0658 1D                 1321 	dec	e
   0659 20 05              1322 	jr	NZ,00173$
                           1323 ;shooting.c:251: j= 1; // if a collision happens
   065B 21r01r00           1324 	ld	hl,#_j
   065E 36 01              1325 	ld	(hl),#0x01
   0660                    1326 00173$:
                           1327 ;shooting.c:249: for (i=0; i != 10; i++) {
   0660 21r00r00           1328 	ld	hl,#_i
   0663 34                 1329 	inc	(hl)
   0664 7E                 1330 	ld	a,(hl)
   0665 D6 0A              1331 	sub	a, #0x0a
   0667 C2r1Ar06           1332 	jp	NZ,00172$
                           1333 ;shooting.c:256: switch (j) {
   066A 21r01r00           1334 	ld	hl,#_j
   066D 7E                 1335 	ld	a,(hl)
   066E B7                 1336 	or	a, a
   066F 20 0B              1337 	jr	NZ,00170$
                           1338 ;shooting.c:259: set_sprite_tile(0,0);
   0671 21 00 00           1339 	ld	hl,#0x0000
   0674 E5                 1340 	push	hl
   0675 CDr00r00           1341 	call	_set_sprite_tile
   0678 E8 02              1342 	add	sp, #2
                           1343 ;shooting.c:260: break;
   067A 18 09              1344 	jr	00174$
                           1345 ;shooting.c:263: default:
   067C                    1346 00170$:
                           1347 ;shooting.c:264: set_sprite_tile(0,1);
   067C 21 00 01           1348 	ld	hl,#0x0100
   067F E5                 1349 	push	hl
   0680 CDr00r00           1350 	call	_set_sprite_tile
   0683 E8 02              1351 	add	sp, #2
                           1352 ;shooting.c:266: }
   0685                    1353 00174$:
   0685 E8 02              1354 	add	sp, #2
   0687 C9                 1355 	ret
                           1356 ;shooting.c:271: UINT8 collisionCheck(UINT8 x1, UINT8 y1, UINT8 w1, UINT8 h1, UINT8 x2, UINT8 y2, UINT8 w2, UINT8 h2){
                           1357 ;	---------------------------------
                           1358 ; Function collisionCheck
                           1359 ; ---------------------------------
   0688                    1360 _collisionCheck::
   0688 E8 FC              1361 	add	sp, #-4
                           1362 ;shooting.c:272: if ((x1 < (x2+w2)) && ((x1+w1) > x2) && (y1 < (h2+y2)) && ((y1+h1) > y2)){
   068A F8 0A              1363 	ldhl	sp,#10
   068C 7E                 1364 	ld	a,(hl)
   068D F8 02              1365 	ldhl	sp,#2
   068F 22                 1366 	ld	(hl+),a
   0690 36 00              1367 	ld	(hl),#0x00
   0692 F8 0C              1368 	ldhl	sp,#12
   0694 4E                 1369 	ld	c,(hl)
   0695 06 00              1370 	ld	b,#0x00
   0697 F8 02              1371 	ldhl	sp,#2
   0699 2A                 1372 	ld	a,(hl+)
   069A 66                 1373 	ld	h,(hl)
   069B 6F                 1374 	ld	l,a
   069C 09                 1375 	add	hl,bc
   069D 4D                 1376 	ld	c,l
   069E 44                 1377 	ld	b,h
   069F F8 06              1378 	ldhl	sp,#6
   06A1 7E                 1379 	ld	a,(hl)
   06A2 F8 00              1380 	ldhl	sp,#0
   06A4 22                 1381 	ld	(hl+),a
   06A5 36 00              1382 	ld	(hl),#0x00
   06A7 2B                 1383 	dec	hl
   06A8 7E                 1384 	ld	a, (hl)
   06A9 91                 1385 	sub	a, c
   06AA 23                 1386 	inc	hl
   06AB 7E                 1387 	ld	a, (hl)
   06AC 98                 1388 	sbc	a, b
   06AD 56                 1389 	ld	d, (hl)
   06AE 78                 1390 	ld	a,b
   06AF 5F                 1391 	ld	e, a
   06B0 CB 7B              1392 	bit	7, e
   06B2 28 07              1393 	jr	Z,00125$
   06B4 CB 7A              1394 	bit	7, d
   06B6 20 08              1395 	jr	NZ,00126$
   06B8 BF                 1396 	cp	a, a
   06B9 18 05              1397 	jr	00126$
   06BB                    1398 00125$:
   06BB CB 7A              1399 	bit	7, d
   06BD 28 01              1400 	jr	Z,00126$
   06BF 37                 1401 	scf
   06C0                    1402 00126$:
   06C0 D2r4Dr07           1403 	jp	NC,00102$
   06C3 F8 08              1404 	ldhl	sp,#8
   06C5 4E                 1405 	ld	c,(hl)
   06C6 06 00              1406 	ld	b,#0x00
   06C8 E1                 1407 	pop	hl
   06C9 E5                 1408 	push	hl
   06CA 09                 1409 	add	hl,bc
   06CB 4D                 1410 	ld	c,l
   06CC 44                 1411 	ld	b,h
   06CD F8 02              1412 	ldhl	sp,#2
   06CF 7E                 1413 	ld	a, (hl)
   06D0 91                 1414 	sub	a, c
   06D1 23                 1415 	inc	hl
   06D2 7E                 1416 	ld	a, (hl)
   06D3 98                 1417 	sbc	a, b
   06D4 56                 1418 	ld	d, (hl)
   06D5 78                 1419 	ld	a,b
   06D6 5F                 1420 	ld	e, a
   06D7 CB 7B              1421 	bit	7, e
   06D9 28 07              1422 	jr	Z,00127$
   06DB CB 7A              1423 	bit	7, d
   06DD 20 08              1424 	jr	NZ,00128$
   06DF BF                 1425 	cp	a, a
   06E0 18 05              1426 	jr	00128$
   06E2                    1427 00127$:
   06E2 CB 7A              1428 	bit	7, d
   06E4 28 01              1429 	jr	Z,00128$
   06E6 37                 1430 	scf
   06E7                    1431 00128$:
   06E7 D2r4Dr07           1432 	jp	NC,00102$
   06EA F8 0D              1433 	ldhl	sp,#13
   06EC 4E                 1434 	ld	c,(hl)
   06ED 06 00              1435 	ld	b,#0x00
   06EF 2B                 1436 	dec	hl
   06F0 2B                 1437 	dec	hl
   06F1 7E                 1438 	ld	a,(hl)
   06F2 F8 00              1439 	ldhl	sp,#0
   06F4 22                 1440 	ld	(hl+),a
   06F5 36 00              1441 	ld	(hl),#0x00
   06F7 E1                 1442 	pop	hl
   06F8 E5                 1443 	push	hl
   06F9 09                 1444 	add	hl,bc
   06FA 4D                 1445 	ld	c,l
   06FB 44                 1446 	ld	b,h
   06FC F8 07              1447 	ldhl	sp,#7
   06FE 7E                 1448 	ld	a,(hl)
   06FF F8 02              1449 	ldhl	sp,#2
   0701 22                 1450 	ld	(hl+),a
   0702 36 00              1451 	ld	(hl),#0x00
   0704 2B                 1452 	dec	hl
   0705 7E                 1453 	ld	a, (hl)
   0706 91                 1454 	sub	a, c
   0707 23                 1455 	inc	hl
   0708 7E                 1456 	ld	a, (hl)
   0709 98                 1457 	sbc	a, b
   070A 56                 1458 	ld	d, (hl)
   070B 78                 1459 	ld	a,b
   070C 5F                 1460 	ld	e, a
   070D CB 7B              1461 	bit	7, e
   070F 28 07              1462 	jr	Z,00129$
   0711 CB 7A              1463 	bit	7, d
   0713 20 08              1464 	jr	NZ,00130$
   0715 BF                 1465 	cp	a, a
   0716 18 05              1466 	jr	00130$
   0718                    1467 00129$:
   0718 CB 7A              1468 	bit	7, d
   071A 28 01              1469 	jr	Z,00130$
   071C 37                 1470 	scf
   071D                    1471 00130$:
   071D D2r4Dr07           1472 	jp	NC,00102$
   0720 F8 09              1473 	ldhl	sp,#9
   0722 4E                 1474 	ld	c,(hl)
   0723 06 00              1475 	ld	b,#0x00
   0725 F8 02              1476 	ldhl	sp,#2
   0727 2A                 1477 	ld	a,(hl+)
   0728 66                 1478 	ld	h,(hl)
   0729 6F                 1479 	ld	l,a
   072A 09                 1480 	add	hl,bc
   072B 4D                 1481 	ld	c,l
   072C 44                 1482 	ld	b,h
   072D F8 00              1483 	ldhl	sp,#0
   072F 7E                 1484 	ld	a, (hl)
   0730 91                 1485 	sub	a, c
   0731 23                 1486 	inc	hl
   0732 7E                 1487 	ld	a, (hl)
   0733 98                 1488 	sbc	a, b
   0734 56                 1489 	ld	d, (hl)
   0735 78                 1490 	ld	a,b
   0736 5F                 1491 	ld	e, a
   0737 CB 7B              1492 	bit	7, e
   0739 28 07              1493 	jr	Z,00131$
   073B CB 7A              1494 	bit	7, d
   073D 20 08              1495 	jr	NZ,00132$
   073F BF                 1496 	cp	a, a
   0740 18 05              1497 	jr	00132$
   0742                    1498 00131$:
   0742 CB 7A              1499 	bit	7, d
   0744 28 01              1500 	jr	Z,00132$
   0746 37                 1501 	scf
   0747                    1502 00132$:
   0747 30 04              1503 	jr	NC,00102$
                           1504 ;shooting.c:273: return 1;
   0749 1E 01              1505 	ld	e,#0x01
   074B 18 02              1506 	jr	00107$
   074D                    1507 00102$:
                           1508 ;shooting.c:275: return 0;
   074D 1E 00              1509 	ld	e,#0x00
   074F                    1510 00107$:
   074F E8 04              1511 	add	sp, #4
   0751 C9                 1512 	ret
                           1513 	.area _CODE
                           1514 	.area _CABS (ABS)
